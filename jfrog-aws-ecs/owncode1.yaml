AWSTemplateFormatVersion: '2010-09-09'
Description: 'JFrog Artifactory Quick Start Deployment'
  

Resources:
  ArtifactoryDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Private Subnets available to the RDS Instance(s)
      SubnetIds: 
        - subnet-08f70c0071bfe1f87
        - subnet-0b1746f3a2eb0355c
  ArtifactoryDB:
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: 100
      Engine: mysql
      EngineVersion: 5.7.22
      MasterUsername: admin
      MasterUserPassword: Apk@2020
      DBInstanceClass: db.m5.xlarge
      DBName: jfrog
      DBSubnetGroupName: !Ref ArtifactoryDBSubnetGroup
      VPCSecurityGroups: 
        - !Ref ArtifactoryDBSG
  ArtifactoryDBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: artifactory-rds-sg
      GroupDescription: SG for RDS Instance to allow communication from the Bastion and Artifactory servers.
      VpcId: vpc-00bc918e95f3c7bac
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/16
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: subnet-0e9165fdea7ec8ccc
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: subnet-0d703ff6a8b13d1a7
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
   ArtifactoryELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: ArtifactoryELB
      Scheme: internal
      Subnets: 
        - subnet-08f70c0071bfe1f87
        - subnet-0b1746f3a2eb0355c
      Tags: 
        - Key: Name
          Value: artifactory-ELB
      Type: network
  ArtifactoryTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Name: Artifactory
      Port: 443
      Protocol: TCP
      #Tags: 
      #  - !Ref DeploymentTag
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: vpc-00bc918e95f3c7bac
  ArtifactoryELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
        - TargetGroupArn: !Ref ArtifactoryTargetGroup
          Type: forward
      LoadBalancerArn: !Ref ArtifactoryELB
      Port: 443
      Protocol: TCP      
  ArtifactoryELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: ArtifactoryELB
      Scheme: internal
      Subnets:
        - subnet-08f70c0071bfe1f87
        - subnet-0b1746f3a2eb0355c
        
      Tags: 
        - Key: Name
          Value: artifactory-ELB
      Type: network
  ECSCluster: 
    Type: AWS::ECS::Cluster
    Properties: 
      ClusterName: prasanna
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      ServiceName: jfrog-ecs
      LaunchType: FARGATE
      DesiredCount: !Ref NumberNodes
      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 443
          TargetGroupArn: !Ref ArtifactoryTargetGroupArn
      TaskDefinition:
        Ref: ArtifactoryTaskDefinition
      HealthCheckGracePeriodSeconds: 300
  ArtifactoryTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "2048"
      Family: !Sub ${ServiceName}-Task
      Memory: "4096"
      NetworkMode: bridge
      RequiresCompatibilities:
        - FARGATE 
      ExecutionRoleArn: ECSTaskExecutionRole
      Volumes:
        - Name: etc
          Host: 
            SourcePath: /data/jfrog/artifactory/etc/
        - Name: temp-plugins
          Host: 
            SourcePath: /data/jfrog/artifactory/tmp/plugins
        - Name: java-certs
          Host: 
            SourcePath: /data/jfrog/artifactory/java_certs
        - Name: plugins
          Host: 
            SourcePath: !Sub 
              /data/jfrog/artifactory/plugins/${DBPlugin}
        - Name: nginx
          Host: 
            SourcePath: /data/jfrog/nginx
      ContainerDefinitions:
        - Name: artifactory
          EntryPoint:
            - /bin/bash
            - "-c"
          Command: 
            - "echo export HA_HOST_IP=`wget -q -O - http://169.254.169.254/latest/meta-data/local-ipv4` > /tmp/source; echo /entrypoint-artifactory.sh >> /tmp/source; chmod +x /tmp/source; /tmp/source"
          Image: !Sub
            docker.bintray.io/jfrog/artifactory-pro:${ArtifactoryVersion}
          PortMappings:
            - ContainerPort: 8081
              HostPort: 8081
              Protocol: tcp
          MountPoints:
            - ContainerPath: /artifactory_extra_conf
              ReadOnly: False
              SourceVolume: etc
            - ContainerPath: /tmp/plugins
              ReadOnly: False
              SourceVolume: temp-plugins
            - ContainerPath: /artifactory_extra_certs
              ReadOnly: False
              SourceVolume: java-certs
            - ContainerPath: !Sub 
                /opt/jfrog/artifactory/tomcat/lib/${DBPlugin}
              ReadOnly: False
              SourceVolume: plugins                           
          Ulimits:
            - Name: nproc
              SoftLimit: 65535
              HardLimit: 65535
            - Name: nofile
              SoftLimit: 32000
              HardLimit: 40000
          HealthCheck:
            Command: 
              - CMD-SHELL
              - (printf 'GET /artifactory/api/system/ping HTTP/1.0\r\n\r\n'; sleep 1) | nc 127.0.0.1 8081 | grep OK || exit 1
            Interval: 5
            Retries: 3
            StartPeriod: 60
            Timeout: 10
          Environment:
            - Name: ARTIFACTORY_MASTER_KEY
              Value: masterkey
            - Name: DB_URL
              Value: !Sub
                jdbc:mysql://${ArtifactoryDBEndpointAddress}:3306/${DatabaseName}?characterEncoding=UTF-8&elideSetAutoCommits=true&verifyServerCertificate=true&useSSL=true&requireSSL=true 
            
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: artifactory
        - Name: nginx
          Image: !Sub
            docker.bintray.io/jfrog/nginx-artifactory-pro:${ArtifactoryVersion}
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
            - ContainerPort: 443
              HostPort: 443
              Protocol: tcp
          Essential: false
          DependsOn: 
            - Condition: HEALTHY
              ContainerName: artifactory
          Links:
            - artifactory:artifactory
          MountPoints:
            - ContainerPath: /var/opt/jfrog/nginx
              ReadOnly: False
              SourceVolume: nginx
          Ulimits:
            - Name: nproc
              SoftLimit: 65535
              HardLimit: 65535
            - Name: nofile
              SoftLimit: 32000
              HardLimit: 40000
          Environment:
            - Name: ART_BASE_URL
              Value: http://localhost:8081/artifactory
            - Name: SSL
              Value: "true"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: ECSLogGroup
              awslogs-region:
                Ref: AWS::Region
              awslogs-stream-prefix: nginx

Outputs:
  ArtifactoryDBEndpointAddress:
    Value: !GetAtt ArtifactoryDB.Endpoint.Address
    Description: Database Endpoint address